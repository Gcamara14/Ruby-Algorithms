# Each new term in the Fibonacci sequence is generated by adding the previous
#two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
#four million, find the sum of the even-valued terms.



# This version of Fibonacci uses the fact that every 3rd fib number is even.
def Fibonacci(n)
  byebug
a, b, sum = 1, 2, 0
while b <= n
  # Apply Fibonacci three times to get the next even number.
  a, b, sum = a + 2 * b, 2 * a + 3 * b, sum + b
end
return sum
end

p Fibonacci(4000000)


# This version of Fibonacci iterates and checks if the fib is even.
def Fibonacci(n)
  a =0
  b = 1
  sum = 0
  while b <= n
    a, b = b, a+b
    if b % 2 == 0
      sum += b
    end
  end
return sum
end

p Fibonacci(4000000)
